import os
import time
from progress_table import ProgressTable

# Liste des scripts √† ex√©cuter dans l'ordre
scripts = [
    "generate_signals.py",
    "extract_features.py",
    "clustering.py",
    "validate_clusters.py",
    "test_algorithms.py",
    "detect_outliers.py",
    "visualize_clusters.py"
]

# Initialisation de la table de progression
table = ProgressTable(
    pbar_show_progress=True,
    pbar_show_eta=True,
    default_column_width=30,
    default_header_color="bold",
)

# Ajout des colonnes
table.add_column("√âtape", alignment="left", width=40)
table.add_column("Statut", alignment="center", width=20)

# Ajouter les √©tapes avant de commencer
table.add_rows(len(scripts), color="cyan")

# Barre de progression principale
main_pbar = table.pbar(len(scripts), show_progress=True, style="square clean green")

# Ex√©cution des scripts avec ProgressTable
for i, script in enumerate(scripts):
    table.update("√âtape", f"üîÑ Ex√©cution de {script}", row=i)
    table.update("Statut", "‚è≥ En cours...", row=i)

    # Ex√©cuter le script
    os.system(f"python {script}")
    
    # Mise √† jour du statut
    table.update("Statut", "‚úÖ Termin√©", row=i)
    main_pbar.update()

    # Mettre √† jour la ligne dans la table et passer √† la suivante
    table.next_row()

    time.sleep(1)

# Finalisation
table.close()
print("\nüéâ Toutes les analyses sont termin√©es ! Lancez `visualize_clusters.py` pour explorer les r√©sultats.")
